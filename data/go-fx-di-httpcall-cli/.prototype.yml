title: |
  [Go] uber-go/fx で curl ライクな CLI を作ってみる
description: |
  uber-go/fx は Go の DI ライブラリ。
  フレームワークに近く、アプリケーション全体で導入するのが望ましい。

  fx はプログラム実行時に依存関係を決定し注入してくれる。
  学習コストがほんのちょっとあり、自分の理解を整理するためにもサンプルアプリを作ってみた。
published: '2024-12-18'

units: 
  - title: サンプルアプリ
    description: |
      curl ライクな CLI を作ってみる。

      とは言っても GET しかできない。
      curl とは似ても似つかないが、まあサンプルなので良いと思う。
    terminal: |
      $ go run . -url https://example.com/
      <!doctype html>
      <html>
      <head>
          <title>Example Domain</title>
          
          // 省略
          // example.com へ HTTP GET リクエストをして、レスポンスボディを標準出力する
  
  - title: コード
    code:
      open: main.go
      include:
        - clientfx
        - clientfx/client.go
        - clientfx/module.go
        - cmdfx
        - cmdfx/cmd.go
        - cmdfx/module.go
        - logger.go
        - go.mod
      units:
        - title: fx.New()
          description: |
            fx app を立ち上げる
          mark: main.go:10

        - description: |
            cmdfx.Module と clientfx.Module があり、
            両者を fx.New() に渡している。
          mark: main.go:11

        - description: |
            エントリポイント
          mark: main.go:15
          
        - description: |
            実処理
          mark: main.go:19

        - title: Module
          description: |
            ファクトリ関数を fx に登録
          mark: cmdfx/module.go:7

        - title: cmdfx.New()
          description: |
            ファクトリ関数。clientfx.IClient へ依存している。
            fx は関数のシグネチャを見て依存関係を構築する。
          mark: cmdfx/cmd.go:10

        - description: |
            cmdfx と clientfx は interface を介してやり取りしている。これにより mock へ差し替えできる
          mark: cmdfx/cmd.go:24
